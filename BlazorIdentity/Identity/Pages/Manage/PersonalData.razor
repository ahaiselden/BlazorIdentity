@layout BlazorIdentity.Identity.Pages.Manage._Layout

@page "/Identity/Manage/PersonalData"

@using BlazorIdentity.Identity;
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.Extensions.Logging;
@using Microsoft.AspNetCore.WebUtilities;
@using System.ComponentModel.DataAnnotations;
@using System.Text;

@inject UserManager<IdentityUser> _userManager;
@inject NavigationManager NavigationManager;
@inject SignInManager<IdentityUser> _signInManager;
@inject ILogger<Identity.Pages.Login> _logger;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient httpClient;

<AuthorizeView Context="authContext">
    <Authorized>
        <h4>Personal Data</h4>

        <StatusMessage Message="@StatusMessage"></StatusMessage>

        <div class="row">
            <div class="col-md-6">
                <p>Your account contains personal data that you have given us. This page allows you to download or delete that data.</p>
                <p>
                    <strong>Deleting this data will permanently remove your account, and this cannot be recovered.</strong>
                </p>
                <EditForm Model="inputModel" OnSubmit="OnSubmit">
                    <button class="btn btn-primary" type="submit">Download</button>
                </EditForm>
                <p>
                    <a id="delete" href="/Identity/Manage/DeletePersonalData" class="btn btn-primary">Delete</a>
                </p>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <h1>Authentication Failure!</h1>
        <p>You're not signed in.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    public string StatusMessage { get; set; }

    public InputModel inputModel { get; set; } = new InputModel();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        var user = await _userManager.GetUserAsync(authState.User);
        if (user == null)
        {
            StatusMessage = $"Unable to load user with ID '{_userManager.GetUserId(authState.User)}'.";
        }
    }

    private async void OnSubmit(EditContext editContext)
    {
        NavigationManager.NavigateTo("Identity/Manage/DownloadPersonalData", true);
        //   httpClient.GetAsync("Identity/Manage/DownloadPersonalData");
    }

    public class InputModel
    {

    }
}
