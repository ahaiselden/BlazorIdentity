@page "/Identity/ForgotPassword"

@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.WebUtilities;
@using System.ComponentModel.DataAnnotations;
@using System.Text;
@using System.Text.Encodings.Web; 

@inject UserManager<IdentityUser> _userManager;
@inject SignInManager<IdentityUser> _signInManager;
@inject NavigationManager NavigationManager;
@inject Microsoft.AspNetCore.Identity.UI.Services.IEmailSender _emailSender;

<title>Forgot Password</title>

<h3>Forgot Password</h3>
<h4>Enter your email.</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Context="forgotPasswordContext" OnSubmit="OnForgotPasswordSubmit">
            <DataAnnotationsValidator />
            
            <div class="form-group">
                <label asp-for="Input.Email"></label>
                <InputText class="form-control" @bind-Value="@forgotPasswordModel.Email"></InputText>
                @*<ValidationMessage For="(() => @forgotPasswordModel.Email)"></ValidationMessage>*@
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {
    private EditContext forgotPasswordContext;

    private ForgotPasswordModel forgotPasswordModel = new ForgotPasswordModel();

    protected override void OnInitialized()
    {
        forgotPasswordContext = new EditContext(forgotPasswordModel);
    }

    public class ForgotPasswordModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }
    }

    private async void OnForgotPasswordSubmit(EditContext editContext)
    {
        if(editContext.Validate())
        {
            var user = await _userManager.FindByEmailAsync(forgotPasswordModel.Email);

            if (user == null || !(await _userManager.IsEmailConfirmedAsync(user)))
            {
                // Don't reveal that the user does not exist or is not confirmed
                NavigationManager.NavigateTo("/Identity/ForgotPasswordConfirmation");
            }

            // For more information on how to enable account confirmation and password reset please
            // visit https://go.microsoft.com/fwlink/?LinkID=532713

            var code = await _userManager.GeneratePasswordResetTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));

            var callbackUrl = $"{NavigationManager.BaseUri}Identity/ResetPassword/{code}";

            await _emailSender.SendEmailAsync(
            forgotPasswordModel.Email,
            "Reset Password",
            $"Please reset your password by <a href='{HtmlEncoder.Default.Encode(callbackUrl)}'>clicking here</a>.");

            NavigationManager.NavigateTo("/ForgotPasswordConfirmation");
        }

        editContext = new EditContext(forgotPasswordModel);
        StateHasChanged();
    }
}
